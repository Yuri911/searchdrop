const express = require('express')
const path = require('path')
const PORT = process.env.PORT || 5000
var VK = require('vksdk');
var TelegramBot = require('node-telegram-bot-api');
var fs = require("fs");
var request = require('request');
var http = require('http');

var token = "541725334:AAGpTFXfqgD_eFCH80K8wIYyKcKET6a1DzM";
var bot = new TelegramBot(token, {polling: true});

var vk = new VK({
   'appId'     : 6492327,
   'appSecret' : "HHHjT5kPW8B6QqG4jw3Y",
   'language'  : 'ru'
});

vk.setToken("f8f337a36da3ee6ec3951a830dafb31799ad13605ac349c1a05b32d7c741d55a74044660b7b698a78b177");

vk.setSecureRequests(true);

express()
  .listen(PORT, () => console.log(`Listening on ${ PORT }`))

  setInterval(function() {
      http.get("http://searchdrop-bot.herokuapp.com");
  }, 300000);

bot.on('message', function(msg){
  var chatId = msg.chat.id;
  var groupId = -1001166778478;

  switch (msg.text) {
    case "/start":
    case "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é":

      if (msg.from.username != undefined) {
        var keyboard = {
            reply_markup: JSON.stringify({
              keyboard: [
                ['üöö–ü–æ—Å—Ç–∞–≤—â–∏–∫'],
                ['üí∞–ü—Ä–æ–¥–∞–≤–µ—Ü']
              ],
              one_time_keyboard: true,
              resize_keyboard: true
            })
        };
        bot.sendMessage(chatId, "‚úãÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ @Searchdrop_bot ü§ñ, " + msg.from.username + "! \n \n‚ö†Ô∏è–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ë–æ—Ç–æ–ºü§ñ–Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Å—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–∑ 3Ô∏è‚É£—à–∞–≥–æ–≤‚ùóÔ∏è \n \n1Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ, –∫—Ç–æ –í—ã, –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–ª–∏ –ü—Ä–æ–¥–∞–≤–µ—Ü?", keyboard);
      }
      else {
        var keyboard = {
            reply_markup: JSON.stringify({
              keyboard: [
                ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é']
              ],
              one_time_keyboard: true,
              resize_keyboard: true
            })
        };
        bot.sendMessage(chatId, "üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –í–∞—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ ‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram", keyboard);
      }
      break;
    case "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é":
      break;
    case "üí∞–ü—Ä–æ–¥–∞–≤–µ—Ü":
      var keyboard = {
          reply_markup: JSON.stringify({
            one_time_keyboard: true,
            keyboard: [
              [{
                text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω',
                request_contact: true
              }]
            ],
            resize_keyboard: true
          })
      };
      bot.sendMessage(chatId, "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω\" –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá", keyboard).then(() => {
        bot.once("contact", (msg) => {
          fs.appendFile("phones_sellers.txt", msg.contact.phone_number +  "\r\n", function (callback){
            var keyboard = {
                reply_markup: JSON.stringify({
                  keyboard: [
                    ['üîé–ò—â—É']
                  ],
                  one_time_keyboard: true,
                  resize_keyboard: true
                })
            };
            bot.sendMessage(chatId, "üëè–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Ç–µ–ø–µ—Ä—å –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã‚ùóÔ∏è \n–¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ \"–ò—â—É\"!", keyboard);
          });
        })
      });
      break;
    case "üîé–ò—â—É":
    case "–ò—â—É":
      bot.sendMessage(chatId, "1Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ. \n2Ô∏è‚É£ –ü–æ–¥ —Ñ–æ—Ç–æ —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ‚ùóÔ∏è").then(()=>{
        bot.once("photo", (msg) => {
          if(msg.caption != null) {
            var fileId = msg.photo[2].file_id;
            bot.sendPhoto(chatId, fileId, {caption: msg.caption + "\n\n" + "üìÉ –û–±—Ä–∞—â–∞—Ç—å—Å—èüëâ @" + msg.from.username + "\n"});
            bot.sendPhoto(groupId, fileId, {caption: msg.caption + "\n\n" + "üìÉ –û–±—Ä–∞—â–∞—Ç—å—Å—èüëâ @" + msg.from.username + "\n"});
            fs.readFile('providers.txt', { encoding : 'utf8' },
            (err, data) => {
              if (err) throw err;
              data.split('\n').forEach(line => {
                if (line != chatId)
                  bot.sendPhoto(line, fileId, {caption: msg.caption + "\n\n" + "üìÉ –û–±—Ä–∞—â–∞—Ç—å—Å—èüëâ @" + msg.from.username + "\n"});
              });
            });
            var path = "./img/";

            if (!fs.existsSync(path)){
                fs.mkdirSync(path);
            }

            bot.downloadFile(fileId, path);

            var filename;
            function dir() {
              fs.readdirSync(path).forEach(file => {
                filename = file;
              })

              vk.request('photos.getWallUploadServer', 120434623, function(data){
                var url = data.response.upload_url;
                const formData = {
                    photo: fs.createReadStream(path+filename),
                };

                request.post({url, formData}, (error, httpResponse, body) => {
                    if (error) {
                        return console.error(error);
                    }
                    var resp = JSON.parse(body);

                    var server = resp.server;
                    var photo = resp.photo;
                    var hash = resp.hash;

                    var options = {'server': server, 'photo': photo, 'hash': hash};

                    vk.request('photos.saveWallPhoto', options, function(ans){
                      var photo_id = ans.response[0].id;
                      var owner_id = ans.response[0].owner_id;

                      var attachments = "photo"+owner_id+"_"+photo_id;

                      var params = {'owner_id':-120434623, 'from_group': 1, 'attachments': attachments, 'message' : msg.caption + "\n–û–±—Ä–∞—â–∞—Ç—å—Å—è –≤ Telegram: t.me/" + msg.from.username + " ‚úÖüì¢\n" + "–ù–∞—à —á–∞—Ç –≤ Telegrame: t.me/podslushano_u_prodavtsov"};
                      vk.request('wall.post', params, function(dat){
                        bot.sendMessage(chatId, "üëè–ó–∞—è–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞‚òùÔ∏è‚òùÔ∏è‚òùÔ∏è\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∂–Ω–æ –≤ –≥—Ä—É–ø–ø–µüëâ vk.com/podslushano_u_prodavtsov");
                      });
                    });
                });
              })
              //fs.unlinkSync(path+filename);
              fs.readdirSync(path).forEach(file => {
                fs.unlinkSync(file);
              })
            }
            setTimeout(dir, 5000);
          }
          else {
            var keyboard = {
                reply_markup: JSON.stringify({
                  keyboard: [
                    ['üîé–ò—â—É']
                  ],
                  one_time_keyboard: true,
                  resize_keyboard: true
                })
            };
            bot.sendMessage(chatId, "‚ùå–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ!", keyboard);
          }
        });
      });
      break;
    case "üöö–ü–æ—Å—Ç–∞–≤—â–∏–∫":
      var keyboard = {
          reply_markup: JSON.stringify({
            one_time_keyboard: true,
            keyboard: [
              [{
                text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω',
                request_contact: true
              }]
            ],
            resize_keyboard: true
          })
      };
      bot.sendMessage(chatId, "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω\" –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá", keyboard).then(() => {
        bot.once("contact", (msg) => {
          fs.appendFile("providers.txt", chatId +  "\r\n", function (callback){
            bot.sendMessage(chatId, "üëè –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –¢–µ–ø–µ—Ä—å –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ üîé –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≥—Ä—É–ø–ø—É üëâ vk.com/podslushano_u_prodavtsov");
          });
          fs.appendFile("phones_providers.txt", msg.contact.phone_number +  "\r\n", function (callback){});
        })
      });
      break;
    case undefined:
      break;
    case "–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã":
      bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").then(() => {
        bot.once("message", (msg) => {
          if (msg.text == "12345") {
            bot.sendDocument(chatId, "phones_sellers.txt");
            bot.sendDocument(chatId, "phones_providers.txt");
          }
          else {
            bot.sendMessage(chatId, "–ü–æ–ø—É—Ç–∞–ª–∏ –í—ã —á—Ç–æ-—Ç–æ)");
          }
        })
      })
      break;
    case "–ü—Ä–æ—Å–Ω–∏—Å—å!":
      console.log("–Ø –Ω–µ —Å–ø–ª—é!");
      break;
    default:
      break;
  }
});
